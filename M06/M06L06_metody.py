### ðŸ”´ Metody we wÅ‚asnych klasach

# W poprzedniej lekcji napisaliÅ›my najprostszÄ… klasÄ™, takÄ… ktÃ³ra ma tylko metodÄ™ specjalnÄ… __init__.

# Teraz pora dodaÄ‡ nowÄ…, zwykÅ‚Ä… metodÄ™.

# CzegoÅ› takiego nie moglibyÅ›my zrobiÄ‡, gdybyÅ›my reprezentowali wydatek jako sÅ‚ownik. DziÄ™ki zdefiniowaniu wÅ‚asnej klasy jest to jednak moÅ¼liwe.

class Expense:
    def __init__(self, amount, desc):
        self.amount = amount
        self.description = desc
        
    def get_amount_as_int(self):
        ''' Return amount in GROSZE as int.  '''
        return int(self.amount * 100)
    
e = Expense(6.50, "Ziemniaki")

print('e.amount =', e.amount)

# ZwrÃ³Ä‡ uwage, Å¼e wywoÅ‚ujÄ…c metodÄ™ nie podajesz self'a w nawias okrÄ…gÅ‚ych - bo jego podajesz przed kropkÄ….
grosze = e.get_amount_as_int()

print('Ziemniaki kosztowaÅ‚y', grosze, 'groszy.')

### ðŸ”´ Ä†wiczenie

# W poprzednim Ä‡wiczeniu zaimplementuj metodÄ™ RenameOperation.display(), ktÃ³ra wyÅ›wietla operacjÄ™, jaka zostanie wykonana. Wykorzystaj tÄ™ metodÄ™ w reszcie kodu.

import os
import glob


pattern = input('Podaj pattern: ')
ext = '.bak'
files = glob.glob(pattern)
operations = []

class RenameOperation:
    def __init__(self, old, new):
        self.old = old
        self.new = new

    def display(self):
        print(self.old, "-->", self.new)


def ext_changing():
    for x in files:
        if '.' in x:
            name = x.rsplit('.', 1)
            nazwa, extension = name   
        else:
            name = x
            extension = ""
        new_filename = nazwa + ext
        operation = RenameOperation(x, new_filename)
        operations.append(operation)

def show_change(operations):
    print("Zostana dokonane nastepujace zmiany: ")
    for op in operations:
        RenameOperation.display()

def execute_change(operations):
    for op in operations:
            os.rename(op.old, op.new)
            print("Zmieniono", op.old, "--->", op.new)

def main():
    ext_changing()
    show_change(operations)
    zgoda = input('Kontynuowac? [t/n]')
    if zgoda.lower() == 't':
        execute_change(operations)
    else:
        print('Anulowano')

if __name__ == "__main__":
    main()